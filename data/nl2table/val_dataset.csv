prompt1,outputs1
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
How many singers do we have?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What is the total number of singers?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Show name, country, age for all singers ordered by age from the oldest to the youngest.","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are the names, countries, and ages for every singer in descending order of age?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What is the average, minimum, and maximum age of all singers from France?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What is the average, minimum, and maximum age for all French singers?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Show the name and the release year of the song by the youngest singer.","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are the names and release years for all the songs of the youngest singer?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are all distinct countries where singers above age 20 are from?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are  the different countries with singers above age 20?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Show all countries and the number of singers in each country.","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
How many singers are from each country?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
List all song names by singers above the average age.","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are all the song names by singers who are older than average?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Show location and name for all stadiums with a capacity between 5000 and 10000.","{""tables"": ['stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are the locations and names of all stations with capacity between 5000 and 10000?","{""tables"": ['stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What is the maximum capacity and the average of all stadiums ?","{""tables"": ['stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What is the average and maximum capacities for all stadiums ?","{""tables"": ['stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What is the name and capacity for the stadium with highest average attendance?","{""tables"": ['stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What is the name and capacity for the stadium with the highest average attendance?","{""tables"": ['stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
How many concerts are there in year 2014 or 2015?","{""tables"": ['concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
How many concerts occurred in 2014 or 2015?","{""tables"": ['concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Show the stadium name and the number of concerts in each stadium.","{""tables"": ['concert', 'stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
For each stadium, how many concerts play there?","{""tables"": ['concert', 'stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Show the stadium name and capacity with most number of concerts in year 2014 or after.","{""tables"": ['concert', 'stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What is the name and capacity of the stadium with the most concerts after 2013 ?","{""tables"": ['concert', 'stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Which year has most number of concerts?","{""tables"": ['concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What is the year that had the most concerts?","{""tables"": ['concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Show the stadium names without any concert.","{""tables"": ['stadium', 'concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are the names of the stadiums without any concerts?","{""tables"": ['stadium', 'concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Show countries where a singer above age 40 and a singer below 30 are from.","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Show names for all stadiums except for stadiums having a concert in year 2014.","{""tables"": ['stadium', 'concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are the names of all stadiums that did not have a concert in 2014?","{""tables"": ['stadium', 'concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Show the name and theme for all concerts and the number of singers in each concert.","{""tables"": ['singer_in_concert', 'concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are the names , themes , and number of singers for every concert ?","{""tables"": ['singer_in_concert', 'concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
List singer names and number of concerts for each singer.","{""tables"": ['singer_in_concert', 'singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are the names of the singers and number of concerts for each person?","{""tables"": ['singer_in_concert', 'singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
List all singer names in concerts in year 2014.","{""tables"": ['singer_in_concert', 'singer', 'concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are the names of the singers who performed in a concert in 2014?","{""tables"": ['singer_in_concert', 'singer', 'concert']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
what is the name and nation of the singer who have a song having 'Hey' in its name?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.","{""tables"": ['concert', 'stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?","{""tables"": ['concert', 'stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
Find the number of concerts happened in the stadium with the highest capacity .","{""tables"": ['concert', 'stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `stadium` (
Stadium_ID,
Location,
Name,
Capacity,
Highest,
Lowest,
Average);

CREATE TABLE `singer` (
Singer_ID,
Name,
Country,
Song_Name,
Song_release_year,
Age,
Is_male);

CREATE TABLE `concert` (
concert_ID,
concert_Name,
Theme,
Stadium_ID,
Year);

CREATE TABLE `singer_in_concert` (
concert_ID,
Singer_ID);

### 
Question: 
What are the number of concerts that occurred in the stadium with the largest capacity ?","{""tables"": ['concert', 'stadium']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the number of pets whose weight is heavier than 10.","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
How many pets have a greater weight than 10?","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the weight of the youngest dog.","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
How much does the youngest dog weigh?","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the maximum weight for each type of pet. List the maximum weight and pet type.","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
List the maximum weight and type for each type of pet.","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find number of pets owned by students who are older than 20.","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
How many pets are owned by students that have an age greater than 20?","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the number of dog pets that are raised by female students (with sex F).","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
How many dog pets are raised by female students?","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the number of distinct type of pets.","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
How many different types of pet are there?","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the first name of students who have cat or dog pet.","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What are the first names of every student who has a cat or dog as a pet?","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the first name of students who have both cat and dog pets .","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What are the students' first names who have both cats and dogs as pets?","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the major and age of students who do not have a cat pet.","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What major is every student who does not own a cat as a pet, and also how old are they?","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the id of students who do not have a cat pet.","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What are the ids of the students who do not own cats as pets?","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the first name and age of students who have a dog but do not have a cat as a pet.","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What is the first name of every student who has a dog but does not have a cat?","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the type and weight of the youngest pet.","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What type of pet is the youngest animal, and how much does it weigh?","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the id and weight of all pets whose age is older than 1.","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What is the id and weight of every pet who is older than 1?","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the average and maximum age for each type of pet.","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What is the average and maximum age for each pet type?","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the average weight for each pet type.","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What is the average weight for each type of pet?","{""tables"": ['pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the first name and age of students who have a pet.","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What are the different first names and ages of the students who do have pets?","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the id of the pet owned by student whose last name is ‘Smith’.","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What is the id of the pet owned by the student whose last name is 'Smith'?","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the number of pets for each student who has any pet and student id.","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
For students who have pets , how many pets does each student have ? list their ids instead of names .","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the first name and gender of student who have more than one pet.","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What is the first name and gender of the all the students who have more than one pet?","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the last name of the student who has a cat that is age 3.","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What is the last name of the student who has a cat that is 3 years old?","{""tables"": ['student', 'has_pet', 'pets']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
Find the average age of students who do not have any pet .","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Student` (
StuID,
LName,
Fname,
Age,
Sex,
Major,
Advisor,
city_code);

CREATE TABLE `Has_Pet` (
StuID,
PetID);

CREATE TABLE `Pets` (
PetID,
PetType,
pet_age,
weight);

### 
Question: 
What is the average age for all students who do not own any pets ?","{""tables"": ['student', 'has_pet']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many continents are there?","{""tables"": ['CONTINENTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the number of continents?","{""tables"": ['CONTINENTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many countries does each continent have? List the continent id, continent name and the number of countries.","{""tables"": ['CONTINENTS', 'COUNTRIES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
For each continent, list its id, name, and how many countries it has?","{""tables"": ['CONTINENTS', 'COUNTRIES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many countries are listed?","{""tables"": ['COUNTRIES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many countries exist?","{""tables"": ['COUNTRIES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many models does each car maker produce? List maker full name, id and the number.","{""tables"": ['CAR_MAKERS', 'MODEL_LIST']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the full name of each car maker, along with its id and how many models it produces?","{""tables"": ['CAR_MAKERS', 'MODEL_LIST']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Which model of the car has the minimum horsepower?","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the model of the car with the smallest amount of horsepower?","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Find the model of the car whose weight is below the average weight.","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the model for the car with a weight smaller than the average?","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Find the name of the makers that produced some cars in the year of 1970?","{""tables"": ['CAR_MAKERS', 'MODEL_LIST', 'CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the name of the different car makers who produced a car in 1970?","{""tables"": ['CAR_MAKERS', 'MODEL_LIST', 'CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Find the make and production time of the cars that were produced in the earliest year?","{""tables"": ['CARS_DATA', 'CAR_NAMES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the maker of the carr produced in the earliest year and what year was it?","{""tables"": ['CARS_DATA', 'CAR_NAMES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Which distinct car models are the produced after 1980?","{""tables"": ['MODEL_LIST', 'CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the different models for the cards produced after 1980?","{""tables"": ['MODEL_LIST', 'CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many car makers are there in each continents? List the continent name and the count.","{""tables"": ['CONTINENTS', 'COUNTRIES', 'car_makers']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the name of each continent and how many car makers are there in each one?","{""tables"": ['CONTINENTS', 'COUNTRIES', 'car_makers']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Which of the countries has the most car makers? List the country name.","{""tables"": ['CAR_MAKERS', 'COUNTRIES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the name of the country with the most car makers?","{""tables"": ['CAR_MAKERS', 'COUNTRIES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many car models are produced by each maker ? Only list the count and the maker full name .","{""tables"": ['model_list', 'car_makers']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the number of car models that are produced by each maker and what is the id and full name of each maker?","{""tables"": ['MODEL_LIST', 'CAR_MAKERS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the accelerate of the car make amc hornet sportabout (sw)?","{""tables"": ['CARS_DATA', 'CAR_NAMES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How much does the car accelerate that makes amc hornet sportabout (sw)?","{""tables"": ['CARS_DATA', 'CAR_NAMES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many car makers are there in france?","{""tables"": ['CAR_MAKERS', 'COUNTRIES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the number of makers of care in France?","{""tables"": ['CAR_MAKERS', 'COUNTRIES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many car models are produced in the usa?","{""tables"": ['MODEL_LIST', 'CAR_MAKERS', 'COUNTRIES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the count of the car models produced in the United States?","{""tables"": ['MODEL_LIST', 'CAR_MAKERS', 'COUNTRIES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the average miles per gallon(mpg) of the cars with 4 cylinders?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the average miles per gallon of all the cards with 4 cylinders?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the smallest weight of the car produced with 8 cylinders on 1974 ?","{""tables"": ['cars_data']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the minimum weight of the car with 8 cylinders produced in 1974 ?","{""tables"": ['cars_data']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are all the makers and models?","{""tables"": ['MODEL_LIST']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the makers and models?","{""tables"": ['MODEL_LIST']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the countries having at least one car maker? List name and id.","{""tables"": ['COUNTRIES', 'CAR_MAKERS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the names and ids of all countries with at least one car maker?","{""tables"": ['COUNTRIES', 'CAR_MAKERS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the number of the cars with horsepower more than 150?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the number of cars with a horsepower greater than 150?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the average weight of cars each year?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the average weight and year for each year?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Which countries in europe have at least 3 car manufacturers?","{""tables"": ['COUNTRIES', 'CONTINENTS', 'CAR_MAKERS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the names of all European countries with at least 3 manufacturers?","{""tables"": ['COUNTRIES', 'CONTINENTS', 'CAR_MAKERS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the maximum horsepower and the make of the car models with 3 cylinders?","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the largest amount of horsepower for the models with 3 cylinders and what make is it?","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Which model saves the most gasoline? That is to say, have the maximum miles per gallon.","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the car model with the highest mpg ?","{""tables"": ['car_names', 'cars_data']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the average horsepower of the cars before 1980?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the average horsepower for all cars produced before 1980 ?","{""tables"": ['cars_data']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the average edispl of the cars of model volvo?","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the average edispl for all volvos?","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the maximum accelerate for different number of cylinders?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the maximum accelerate for all the different cylinders?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Which model has the most version(make) of cars?","{""tables"": ['CAR_NAMES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What model has the most different versions?","{""tables"": ['CAR_NAMES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many cars have more than 4 cylinders?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the number of cars with more than 4 cylinders?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
how many cars were produced in 1980?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
In 1980, how many cars were made?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many car models were produced by the maker with full name American Motor Company?","{""tables"": ['CAR_MAKERS', 'MODEL_LIST']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the number of car models created by the car maker American Motor Company?","{""tables"": ['CAR_MAKERS', 'MODEL_LIST']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Which makers designed more than 3 car models? List full name and the id.","{""tables"": ['CAR_MAKERS', 'MODEL_LIST']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the names and ids of all makers with more than 3 models?","{""tables"": ['CAR_MAKERS', 'MODEL_LIST']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?","{""tables"": ['CAR_NAMES', 'MODEL_LIST', 'CAR_MAKERS', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the different models created by either the car maker General Motors or weighed more than 3500?","{""tables"": ['CAR_NAMES', 'MODEL_LIST', 'CAR_MAKERS', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
In which years cars were produced weighing no less than 3000 and no more than 4000 ?","{""tables"": ['cars_data']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?","{""tables"": ['cars_data']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the horsepower of the car with the largest accelerate?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the horsepower of the car with the greatest accelerate?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
For model volvo, how many cylinders does the car with the least accelerate have?","{""tables"": ['CARS_DATA', 'CAR_NAMES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
For a volvo model, how many cylinders does the version with least accelerate have?","{""tables"": ['CARS_DATA', 'CAR_NAMES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many cars have a larger accelerate than the car with the largest horsepower?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the number of cars with a greater accelerate than the one with the most horsepower?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many countries has more than 2 car makers ?","{""tables"": ['countries', 'car_makers']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the number of countries with more than 2 car makers ?","{""tables"": ['countries', 'car_makers']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
How many cars has over 6 cylinders?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the number of carsw ith over 6 cylinders?","{""tables"": ['CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
For the cars with 4 cylinders, which model has the largest horsepower?","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
For all of the 4 cylinder cars, which model has the most horsepower?","{""tables"": ['CAR_NAMES', 'CARS_DATA']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.","{""tables"": ['CARS_DATA', 'CAR_NAMES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?","{""tables"": ['cars_data', 'car_names']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?","{""tables"": ['cars_data']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?","{""tables"": ['cars_data']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Which models are lighter than 3500 but not built by the 'Ford Motor Company'?","{""tables"": ['MODEL_LIST', 'CAR_NAMES', 'CARS_DATA', 'CAR_MAKERS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?","{""tables"": ['MODEL_LIST', 'CAR_NAMES', 'CARS_DATA', 'CAR_MAKERS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the name of the countries where there is not a single car maker?","{""tables"": ['countries', 'CAR_MAKERS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the names of the countries with no car makers?","{""tables"": ['countries', 'CAR_MAKERS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .","{""tables"": ['car_makers', 'model_list', 'car_names']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?","{""tables"": ['CAR_MAKERS', 'MODEL_LIST', 'CAR_NAMES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?","{""tables"": ['Countries', 'CAR_MAKERS', 'MODEL_LIST']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `continents` (
ContId,
Continent);

CREATE TABLE `countries` (
CountryId,
CountryName,
Continent);

CREATE TABLE `car_makers` (
Id,
Maker,
FullName,
Country);

CREATE TABLE `model_list` (
ModelId,
Maker,
Model);

CREATE TABLE `car_names` (
MakeId,
Model,
Make);

CREATE TABLE `cars_data` (
Id,
MPG,
Cylinders,
Edispl,
Horsepower,
Weight,
Accelerate,
Year);

### 
Question: 
What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?","{""tables"": ['countries', 'car_makers', 'model_list']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which country does Airline ""JetBlue Airways"" belong to?","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What country is Jetblue Airways affiliated with?","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What is the abbreviation of Airline ""JetBlue Airways""?","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which abbreviation corresponds to Jetblue Airways?","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
List all airline names and their abbreviations in ""USA"".","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What are the airline names and abbreviations for airlines in the USA?","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
List the airport code and name in the city of Anthony.","{""tables"": ['AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Give the airport code and airport name corresonding to the city Anthony.","{""tables"": ['AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many airlines do we have?","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What is the total number of airlines?","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many airports do we have?","{""tables"": ['AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Return the number of  airports.","{""tables"": ['AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many flights do we have?","{""tables"": ['FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Return the number of flights.","{""tables"": ['FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which airline has abbreviation 'UAL'?","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Give the airline with abbreviation 'UAL'.","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many airlines are from USA?","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Return the number of airlines in the USA.","{""tables"": ['AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which city and country is the Alton airport at?","{""tables"": ['AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Give the city and country for the Alton airport.","{""tables"": ['AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What is the airport name for airport 'AKO'?","{""tables"": ['AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Return the name of the airport with code 'AKO'.","{""tables"": ['AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What are airport names at City 'Aberdeen'?","{""tables"": ['AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What are the names of airports in Aberdeen?","{""tables"": ['AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many flights depart from 'APG'?","{""tables"": ['FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Count the number of flights departing from 'APG'.","{""tables"": ['FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many flights have destination ATO?","{""tables"": ['FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Count the number of flights into ATO.","{""tables"": ['FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many flights depart from City Aberdeen?","{""tables"": ['FLIGHTS', 'AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Return the number of flights departing from Aberdeen.","{""tables"": ['FLIGHTS', 'AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many flights arriving in Aberdeen city?","{""tables"": ['FLIGHTS', 'AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Return the number of flights arriving in Aberdeen.","{""tables"": ['FLIGHTS', 'AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?","{""tables"": ['FLIGHTS', 'AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many flights fly from Aberdeen to Ashley?","{""tables"": ['FLIGHTS', 'AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many flights does airline 'JetBlue Airways' have?","{""tables"": ['FLIGHTS', 'AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Give the number of Jetblue Airways flights.","{""tables"": ['FLIGHTS', 'AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many 'United Airlines' flights go to Airport 'ASY'?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Count the number of United Airlines flights arriving in ASY Airport.","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many 'United Airlines' flights depart from Airport 'AHD'?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Return the number of United Airlines flights leaving from AHD Airport.","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many United Airlines flights go to City 'Aberdeen'?","{""tables"": ['FLIGHTS', 'AIRPORTS', 'AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Count the number of United Airlines flights that arrive in Aberdeen.","{""tables"": ['FLIGHTS', 'AIRPORTS', 'AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which city has most number of arriving flights?","{""tables"": ['AIRPORTS', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which city has the most frequent destination airport?","{""tables"": ['AIRPORTS', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which city has most number of departing flights?","{""tables"": ['AIRPORTS', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which city is the most frequent source airport?","{""tables"": ['AIRPORTS', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What is the code of airport that has the highest number of flights?","{""tables"": ['AIRPORTS', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What is the airport code of the airport with the most flights?","{""tables"": ['AIRPORTS', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What is the code of airport that has fewest number of flights?","{""tables"": ['AIRPORTS', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Give the code of the airport with the least flights.","{""tables"": ['AIRPORTS', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which airline has most number of flights?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What airline serves the most flights?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Find the abbreviation and country of the airline that has fewest number of flights?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What is the abbreviation of the airilne has the fewest flights and what country is it in?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What are airlines that have some flight departing from airport 'AHD'?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which airlines have a flight with source airport AHD?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What are airlines that have flights arriving at airport 'AHD'?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which airlines have a flight with destination airport AHD?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Find all airlines that have flights from both airports 'APG' and 'CVO'.","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which airlines have departing flights from both APG and CVO airports?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Find all airlines that have flights from airport 'CVO' but not from 'APG'.","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which airlines have departures from CVO but not from APG airports?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Find all airlines that have at least 10 flights.","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which airlines have at least 10 flights?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Find all airlines that have fewer than 200 flights.","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which airlines have less than 200 flights?","{""tables"": ['AIRLINES', 'FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What are flight numbers of Airline ""United Airlines""?","{""tables"": ['FLIGHTS', 'AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which flight numbers correspond to United Airlines flights?","{""tables"": ['FLIGHTS', 'AIRLINES']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What are flight numbers of flights departing from Airport ""APG""?","{""tables"": ['FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Give the flight numbers of flights leaving from APG.","{""tables"": ['FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What are flight numbers of flights arriving at Airport ""APG""?","{""tables"": ['FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Give the flight numbers of flights landing at APG.","{""tables"": ['FLIGHTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What are flight numbers of flights departing from City ""Aberdeen ""?","{""tables"": ['FLIGHTS', 'AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Give the flight numbers of flights leaving from Aberdeen.","{""tables"": ['FLIGHTS', 'AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
What are flight numbers of flights arriving at City ""Aberdeen""?","{""tables"": ['FLIGHTS', 'AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Give the flight numbers of flights arriving in Aberdeen.","{""tables"": ['FLIGHTS', 'AIRPORTS']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Find the number of flights landing in the city of Aberdeen or Abilene.","{""tables"": ['Flights', 'Airports']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
How many flights land in Aberdeen or Abilene?","{""tables"": ['Flights', 'Airports']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Find the name of airports which do not have any flight in and out.","{""tables"": ['Airports', 'Flights']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `airlines` (
uid,
Airline,
Abbreviation,
Country);

CREATE TABLE `airports` (
City,
AirportCode,
AirportName,
Country,
CountryAbbrev);

CREATE TABLE `flights` (
Airline,
FlightNo,
SourceAirport,
DestAirport);

### 
Question: 
Which airports do not have departing or arriving flights?","{""tables"": ['Airports', 'Flights']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
How many employees are there?","{""tables"": ['employee']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Count the number of employees","{""tables"": ['employee']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Sort employee names by their age in ascending order.","{""tables"": ['employee']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
List the names of employees and sort in ascending order of age.","{""tables"": ['employee']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
What is the number of employees from each city?","{""tables"": ['employee']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Count the number of employees for each city.","{""tables"": ['employee']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Which cities do more than one employee under age 30 come from?","{""tables"": ['employee']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Find the cities that have more than one employee under age 30.","{""tables"": ['employee']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Find the number of shops in each location.","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
How many shops are there in each location?","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Find the manager name and district of the shop whose number of products is the largest.","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
What are the manager name and district of the shop that sells the largest number of products?","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
find the minimum and maximum number of products of all stores.","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
What are the minimum and maximum number of products across all the shops?","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Return the name, location and district of all shops in descending order of number of products.","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Sort all the shops by number products in descending order, and return the name, location and district of each shop.","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Find the names of stores whose number products is more than the average number of products.","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Which shops' number products is above the average? Give me the shop names.","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
find the name of employee who was awarded the most times in the evaluation.","{""tables"": ['employee', 'evaluation']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Which employee received the most awards in evaluations? Give me the employee name.","{""tables"": ['employee', 'evaluation']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Find the name of the employee who got the highest one time bonus.","{""tables"": ['employee', 'evaluation']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Which employee received the biggest bonus? Give me the employee name.","{""tables"": ['employee', 'evaluation']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Find the names of employees who never won any award in the evaluation.","{""tables"": ['employee', 'evaluation']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
What are the names of the employees who never received any evaluation?","{""tables"": ['employee', 'evaluation']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
What is the name of the shop that is hiring the largest number of employees?","{""tables"": ['hiring', 'shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Which shop has the most employees? Give me the shop name.","{""tables"": ['hiring', 'shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Find the name of the shops that do not hire any employee.","{""tables"": ['shop', 'hiring']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Which shops run with no employees? Find the shop names","{""tables"": ['shop', 'hiring']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Find the number of employees hired in each shop; show the shop name as well.","{""tables"": ['hiring', 'shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
For each shop, return the number of employees working there and the name of the shop.","{""tables"": ['hiring', 'shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
What is total bonus given in all evaluations?","{""tables"": ['evaluation']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Find the total amount of bonus given in all the evaluations.","{""tables"": ['evaluation']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Give me all the information about hiring.","{""tables"": ['hiring']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
What is all the information about hiring?","{""tables"": ['hiring']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Which district has both stores with less than 3000 products and stores with more than 10000 products?","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
How many different store locations are there?","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `employee` (
Employee_ID,
Name,
Age,
City);

CREATE TABLE `shop` (
Shop_ID,
Name,
Location,
District,
Number_products,
Manager_name);

CREATE TABLE `hiring` (
Shop_ID,
Employee_ID,
Start_from,
Is_full_time);

CREATE TABLE `evaluation` (
Employee_ID,
Year_awarded,
Bonus);

### 
Question: 
Count the number of distinct store locations.","{""tables"": ['shop']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
How many documents do we have?","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Count the number of documents.","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
List document IDs, document names, and document descriptions for all documents.","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the ids, names, and descriptions for all documents?","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What is the document name and template id for document with description with the letter 'w' in it?","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the names and template ids for documents that contain the letter w in their description.","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What is the document id, template id and description for document named ""Robbin CV""?","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the document id, template id, and description for the document with the name Robbin CV.","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
How many different templates do all document use?","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Count the number of different templates used for documents.","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
How many documents are using the template with type code 'PPT'?","{""tables"": ['Documents', 'Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Count the number of documents that use the PPT template type.","{""tables"": ['Documents', 'Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all template ids and number of documents using each template.","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are all different template ids used for documents, and how many times were each of them used?","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What is the id and type code for the template used by the most documents?","{""tables"": ['Documents', 'Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the id and type code of the template that is used for the greatest number of documents.","{""tables"": ['Documents', 'Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show ids for all templates that are used by more than one document.","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the template ids of any templates used in more than a single document?","{""tables"": ['Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show ids for all templates not used by any document.","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the ids for templates that are not used in any documents?","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
How many templates do we have?","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Count the number of templates.","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show template ids, version numbers, and template type codes for all templates.","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the ids, version numbers, and type codes for each template?","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all distinct template type codes for all templates.","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the different template type codes?","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the ids of templates with template type code PP or PPT?","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the ids of templates that have the code PP or PPT.","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
How many templates have template type code CV?","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Count the number of templates of the type CV.","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What is the version number and template type code for the template with version number later than 5?","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the version numbers and template type codes of templates with a version number greater than 5.","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all template type codes and number of templates for each.","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the different template type codes, and how many templates correspond to each?","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Which template type code has most number of templates?","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the type code of the template type that the most templates belong to.","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all template type codes with less than three templates.","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the codes of template types that have fewer than 3 templates?","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What the smallest version number and its template type code?","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the lowest version number, along with its corresponding template type code.","{""tables"": ['Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What is the template type code of the template used by document with the name ""Data base""?","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the template type code of the template that is used by a document named Data base.","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all document names using templates with template type code BK.","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the names of documents that use templates with the code BK?","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all template type codes and the number of documents using each type.","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the different template type codes, and how many documents use each type?","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Which template type code is used by most number of documents?","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the code of the template type that is most commonly used in documents.","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all template type codes that are not used by any document.","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the codes of template types that are not used for any document?","{""tables"": ['Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all template type codes and descriptions.","{""tables"": ['Ref_template_types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the type codes and descriptions for all template types?","{""tables"": ['Ref_template_types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What is the template type descriptions for template type code ""AD"".","{""tables"": ['Ref_template_types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the template type description of the template type with the code AD.","{""tables"": ['Ref_template_types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What is the template type code for template type description ""Book"".","{""tables"": ['Ref_template_types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the type code of the template type with the description ""Book"".","{""tables"": ['Ref_template_types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the distinct template type descriptions for the templates ever used by any document?","{""tables"": ['Ref_template_types', 'Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the different descriptions for templates that have been used in a document.","{""tables"": ['Ref_template_types', 'Templates', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the template ids with template type description ""Presentation"".","{""tables"": ['Ref_template_types', 'Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the ids corresponding to templates with the description 'Presentation'.","{""tables"": ['Ref_template_types', 'Templates']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
How many paragraphs in total?","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Count the number of paragraphs.","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
How many paragraphs for the document with name 'Summer Show'?","{""tables"": ['Paragraphs', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Count the number of paragraphs in the document named 'Summer Show'.","{""tables"": ['Paragraphs', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show paragraph details for paragraph with text 'Korea ' .","{""tables"": ['paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the details for the paragraph that includes the text 'Korea ' ?","{""tables"": ['paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all paragraph ids and texts for the document with name 'Welcome to NY'.","{""tables"": ['Paragraphs', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?","{""tables"": ['Paragraphs', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all paragraph texts for the document ""Customer reviews"".","{""tables"": ['Paragraphs', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the paragraph texts for the document with the name 'Customer reviews'?","{""tables"": ['Paragraphs', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all document ids and the number of paragraphs in each document. Order by document id.","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show all document ids, names and the number of paragraphs in each document.","{""tables"": ['Paragraphs', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the ids and names of each document, as well as the number of paragraphs in each?","{""tables"": ['Paragraphs', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
List all document ids with at least two paragraphs.","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the ids of documents that have 2 or more paragraphs?","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What is the document id and name with greatest number of paragraphs?","{""tables"": ['Paragraphs', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the id and name of the document with the most paragraphs.","{""tables"": ['Paragraphs', 'Documents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What is the document id with least number of paragraphs?","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Return the id of the document with the fewest paragraphs.","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What is the document id with 1 to 2 paragraphs?","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Give the ids of documents that have between one and two paragraphs.","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
Show the document id with paragraph text 'Brazil' and 'Ireland'.","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Template_Types` (
Template_Type_Code,
Template_Type_Description);

CREATE TABLE `Templates` (
Template_ID,
Version_Number,
Template_Type_Code,
Date_Effective_From,
Date_Effective_To,
Template_Details);

CREATE TABLE `Documents` (
Document_ID,
Template_ID,
Document_Name,
Document_Description,
Other_Details);

CREATE TABLE `Paragraphs` (
Paragraph_ID,
Document_ID,
Paragraph_Text,
Other_Details);

### 
Question: 
What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?","{""tables"": ['Paragraphs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
How many teachers are there?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What is the total count of teachers?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
List the names of teachers in ascending order of age.","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What are the names of the teachers ordered by ascending age?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What are the age and hometown of teachers?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What is the age and hometown of every teacher?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
List the name of teachers whose hometown is not `` Little Lever Urban District '' .","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
Show the name of teachers aged either 32 or 33?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What are the names of the teachers who are aged either 32 or 33?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What is the hometown of the youngest teacher?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
Where is the youngest teacher from?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
Show different hometown of teachers and the number of teachers from each hometown.","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
For each hometown, how many teachers are there?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
List the most common hometown of teachers.","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What is the most commmon hometowns for teachers?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
Show the hometowns shared by at least two teachers.","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What are the towns from which at least two teachers come from?","{""tables"": ['teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
Show names of teachers and the courses they are arranged to teach.","{""tables"": ['course_arrange', 'course', 'teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What is the name of each teacher and what course they teach?","{""tables"": ['course_arrange', 'course', 'teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.","{""tables"": ['course_arrange', 'course', 'teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?","{""tables"": ['course_arrange', 'course', 'teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
Show the name of the teacher for the math course.","{""tables"": ['course_arrange', 'course', 'teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What are the names of the people who teach math courses?","{""tables"": ['course_arrange', 'course', 'teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
Show names of teachers and the number of courses they teach.","{""tables"": ['course_arrange', 'teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What are the names of the teachers and how many courses do they teach?","{""tables"": ['course_arrange', 'teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
Show names of teachers that teach at least two courses.","{""tables"": ['course_arrange', 'teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What are the names of the teachers who teach at least two courses?","{""tables"": ['course_arrange', 'teacher']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
List the names of teachers who have not been arranged to teach courses.","{""tables"": ['teacher', 'course_arrange']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `course` (
Course_ID,
Staring_Date,
Course);

CREATE TABLE `teacher` (
Teacher_ID,
Name,
Age,
Hometown);

CREATE TABLE `course_arrange` (
Course_ID,
Teacher_ID,
Grade);

### 
Question: 
What are the names of the teachers whose courses have not been arranged?","{""tables"": ['teacher', 'course_arrange']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
How many visitors below age 30 are there?","{""tables"": ['visitor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.","{""tables"": ['visitor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
What is the average age of the visitors whose membership level is not higher than 4?","{""tables"": ['visitor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.","{""tables"": ['visitor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
Find the id and name of the museum that has the most staff members?","{""tables"": ['museum']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
Find the average number of staff working for the museums that were open before 2009.","{""tables"": ['museum']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
What are the opening year and staff number of the museum named Plaza Museum?","{""tables"": ['museum']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.","{""tables"": ['museum']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
find the id, name and age for visitors who visited some museums more than once.","{""tables"": ['visitor', 'visit']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?","{""tables"": ['visitor', 'visit']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
What are the id and name of the museum visited most times?","{""tables"": ['museum', 'visit']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
What is the name of the museum that had no visitor yet?","{""tables"": ['museum', 'visit']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
Find the name and age of the visitor who bought the most tickets at once.","{""tables"": ['visitor', 'visit']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
What are the average and maximum number of tickets bought in all visits?","{""tables"": ['visit']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
What is the total ticket expense of the visitors whose membership level is 1?","{""tables"": ['visitor', 'visit']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?","{""tables"": ['visitor', 'visit', 'museum']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
Find the number of visitors who did not visit any museum opened after 2010.","{""tables"": ['visitor', 'museum', 'visit']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `museum` (
Museum_ID,
Name,
Num_of_Staff,
Open_Year);

CREATE TABLE `visitor` (
ID,
Name,
Level_of_membership,
Age);

CREATE TABLE `visit` (
Museum_ID,
visitor_ID,
Num_of_Ticket,
Total_spent);

### 
Question: 
How many museums were opened after 2013 or before 2008?","{""tables"": ['museum']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the total number of players.","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
How many players are there?","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the total number of matches.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Count the number of matches.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
List the first name and birth date of all players from the country with code USA.","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the first names and birth dates of players from the USA?","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the average age of losers and winners of all matches.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the average ages of losers and winners across matches?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the average rank of winners in all matches.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What is the average rank for winners in all matches?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the highest rank of losers in all matches.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What is the best rank of losers across all matches?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
find the number of distinct country codes of all players.","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
How many distinct countries do players come from?","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the number of distinct name of losers.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
How many different loser names are there?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the name of tourney that has more than 10 matches.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the names of tournaments that have more than 10 matches?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
List the names of all winners who played in both 2013 and 2016.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the names of players who won in both 2013 and 2016?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
List the number of all matches who played in years of 2013 or 2016.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
How many matches were played in 2013 or 2016?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?","{""tables"": ['players', 'matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the first names and country codes for players who won both the WTA Championships and the Australian Open?","{""tables"": ['players', 'matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the first name and country code of the oldest player.","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What is the first name and country code of the oldest player?","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
List the first and last name of all players in the order of birth date.","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the full names of all players, sorted by birth date?","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
List the first and last name of all players who are left / L hand in the order of birth date.","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the full names of all left handed players, in order of birth date?","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the first name and country code of the player who did the most number of tours.","{""tables"": ['players', 'rankings']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What is the first name and country code of the player with the most tours?","{""tables"": ['players', 'rankings']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the year that has the most number of matches.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Which year had the most matches?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the name and rank points of the winner who won the most times.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What is the name of the winner who has won the most matches, and how many rank points does this player have?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What is the name of the winner with the most rank points who participated in the Australian Open tournament?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
find the names of loser and winner who played in the match with greatest number of minutes.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the names of the winner and loser who played in the longest match?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the average ranking for each player and their first name.","{""tables"": ['players', 'rankings']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the first names of all players, and their average rankings?","{""tables"": ['players', 'rankings']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the total ranking points for each player and their first name.","{""tables"": ['players', 'rankings']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the first names of all players, and their total ranking points?","{""tables"": ['players', 'rankings']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
find the number of players for each country.","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
How many players are from each country?","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
find the code of the country where has the greatest number of players.","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What is the code of the country with the most players?","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the codes of countries that have more than 50 players.","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the codes of countries with more than 50 players?","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the total number of tours for each ranking date.","{""tables"": ['rankings']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
How many total tours were there for each ranking date?","{""tables"": ['rankings']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the number of matches happened in each year.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
How many matches were played in each year?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the name and rank of the 3 youngest winners across all matches.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What are the names and ranks of the three youngest winners across all matches?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
How many different winners both participated in the WTA Championships and were left handed?","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the number of left handed winners who participated in the WTA Championships.","{""tables"": ['matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the first name, country code and birth date of the winner who has the highest rank points in all matches.","{""tables"": ['players', 'matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
What is the first name, country code, and birth date of the player with the most winner rank points across all matches?","{""tables"": ['players', 'matches']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
Find the number of players for each hand type.","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `players` (
player_id,
first_name,
last_name,
hand,
birth_date,
country_code);

CREATE TABLE `matches` (
best_of,
draw_size,
loser_age,
loser_entry,
loser_hand,
loser_ht,
loser_id,
loser_ioc,
loser_name,
loser_rank,
loser_rank_points,
loser_seed,
match_num,
minutes,
round,
score,
surface,
tourney_date,
tourney_id,
tourney_level,
tourney_name,
winner_age,
winner_entry,
winner_hand,
winner_ht,
winner_id,
winner_ioc,
winner_name,
winner_rank,
winner_rank_points,
winner_seed,
year);

CREATE TABLE `rankings` (
ranking_date,
ranking,
player_id,
ranking_points,
tours);

### 
Question: 
How many players are there for each hand type?","{""tables"": ['players']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
How many ships ended up being 'Captured'?","{""tables"": ['ship']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
List the name and tonnage ordered by in descending alphaetical order for the names.","{""tables"": ['ship']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
List the name, date and result of each battle.","{""tables"": ['battle']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
What is maximum and minimum death toll caused each time?","{""tables"": ['death']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
What is the average number of injuries caused each time?","{""tables"": ['death']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
What are the death and injury situations caused by the ship with tonnage 't'?","{""tables"": ['death', 'ship']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
What are the name and results of the battles when the bulgarian commander is not 'Boril'","{""tables"": ['battle']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
What are the different ids and names of the battles that lost any 'Brig' type shipes?","{""tables"": ['battle', 'ship']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
What are the ids and names of the battles that led to more than 10 people killed in total.","{""tables"": ['battle', 'ship', 'death']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
What is the ship id and name that caused most total injuries?","{""tables"": ['death', 'ship']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?","{""tables"": ['battle']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
How many different results are there for the battles?","{""tables"": ['battle']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
How many battles did not lose any ship with tonnage '225'?","{""tables"": ['battle', 'ship']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'","{""tables"": ['battle', 'ship']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.","{""tables"": ['battle', 'ship']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `battle` (
id,
name,
date,
bulgarian_commander,
latin_commander,
result);

CREATE TABLE `ship` (
lost_in_battle,
id,
name,
tonnage,
ship_type,
location,
disposition_of_ship);

CREATE TABLE `death` (
caused_by_ship_id,
id,
note,
killed,
injured);

### 
Question: 
What are the notes of the death events which has substring 'East'?","{""tables"": ['death']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
what are all the addresses including line 1 and line 2?","{""tables"": ['addresses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the first and second line for all addresses?","{""tables"": ['addresses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many courses in total are listed?","{""tables"": ['Courses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many courses are there?","{""tables"": ['Courses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How is the math course described?","{""tables"": ['Courses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the descriptions for all the math courses?","{""tables"": ['Courses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the zip code of the address in the city Port Chelsea?","{""tables"": ['Addresses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the zip code for Port Chelsea?","{""tables"": ['Addresses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Which department offers the most number of degrees? List department name and id.","{""tables"": ['Degree_Programs', 'Departments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the name and id of the department with the most number of degrees ?","{""tables"": ['degree_programs', 'departments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many departments offer any degree?","{""tables"": ['Degree_Programs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many different departments offer degrees?","{""tables"": ['Degree_Programs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many different degree names are offered?","{""tables"": ['Degree_Programs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many different degrees are offered?","{""tables"": ['Degree_Programs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many degrees does the engineering department offer?","{""tables"": ['Departments', 'Degree_Programs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many degrees does the engineering department have?","{""tables"": ['Departments', 'Degree_Programs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the names and descriptions of all the sections?","{""tables"": ['Sections']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the names and descriptions for all the sections?","{""tables"": ['Sections']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the names and id of courses having at most 2 sections?","{""tables"": ['Courses', 'Sections']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the names and ids of every course with less than 2 sections?","{""tables"": ['Courses', 'Sections']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
List the section_name in reversed lexicographical order.","{""tables"": ['Sections']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the names of the sections in reverse alphabetical order?","{""tables"": ['Sections']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the semester which most student registered in? Show both the name and the id.","{""tables"": ['Semesters', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
For each semester, what is the name and id of the one with the most students registered?","{""tables"": ['Semesters', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the description of the department whose name has the substring the computer?","{""tables"": ['Departments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the department description for the one whose name has the word computer?","{""tables"": ['Departments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.","{""tables"": ['Students', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?","{""tables"": ['Students', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.","{""tables"": ['Students', 'Student_Enrolment', 'Degree_Programs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the first, middle, and last names for everybody enrolled in a Bachelors program?","{""tables"": ['Students', 'Student_Enrolment', 'Degree_Programs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Find the kind of program which most number of students are enrolled in?","{""tables"": ['Degree_Programs', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the degree summary name that has the most number of students enrolled?","{""tables"": ['Degree_Programs', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Find the program which most number of students are enrolled in. List both the id and the summary.","{""tables"": ['Degree_Programs', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the program id and the summary of the degree that has the most students enrolled?","{""tables"": ['Degree_Programs', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.","{""tables"": ['Students', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?","{""tables"": ['Students', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Which semesters do not have any student enrolled? List the semester name.","{""tables"": ['Semesters', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the name of the semester with no students enrolled?","{""tables"": ['Semesters', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are all the course names of the courses which ever have students enrolled in?","{""tables"": ['Courses', 'Student_Enrolment_Courses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the names of all courses that have some students enrolled?","{""tables"": ['Courses', 'Student_Enrolment_Courses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What's the name of the course with most number of enrollments?","{""tables"": ['Courses', 'Student_Enrolment_Courses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the name of the course with the most students enrolled?","{""tables"": ['Courses', 'Student_Enrolment_Courses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.","{""tables"": ['Students', 'Addresses', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the last name of the students who live in North Carolina but have not registered in any degree programs?","{""tables"": ['Students', 'Addresses', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Show the date and id of the transcript with at least 2 course results.","{""tables"": ['Transcript_Contents', 'Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the date and id of the transcript with at least 2 courses listed?","{""tables"": ['Transcript_Contents', 'Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the phone number of the man with the first name Timmothy and the last name Ward?","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the mobile phone number of the student named Timmothy Ward ?","{""tables"": ['students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Who is the first student to register? List the first name, middle name and last name.","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the first, middle, and last name of the first student to register?","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Who is the earliest graduate of the school? List the first name, middle name and last name.","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the first, middle, and last name of the earliest school graduate?","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Whose permanent address is different from his or her current address? List his or her first name.","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the first name of the student whose permanent address is different from his or her current one?","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Which address holds the most number of students currently? List the address id and all lines.","{""tables"": ['Addresses', 'Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the id, line 1, and line 2 of the address with the most students?","{""tables"": ['Addresses', 'Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
On average, when were the transcripts printed?","{""tables"": ['Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the average transcript date?","{""tables"": ['Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
When is the first transcript released? List the date and details.","{""tables"": ['Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the earliest date of a transcript release, and what details can you tell me?","{""tables"": ['Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many transcripts are released?","{""tables"": ['Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many transcripts are listed?","{""tables"": ['Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the last transcript release date?","{""tables"": ['Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
When was the last transcript released?","{""tables"": ['Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.","{""tables"": ['Transcript_Contents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?","{""tables"": ['Transcript_Contents']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Show the date of the transcript which shows the least number of results, also list the id.","{""tables"": ['Transcript_Contents', 'Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the date and id of the transcript with the least number of results?","{""tables"": ['Transcript_Contents', 'Transcripts']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Find the semester when both Master students and Bachelor students got enrolled in.","{""tables"": ['Degree_Programs', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the id of the semester that had both Masters and Bachelors students enrolled?","{""tables"": ['Degree_Programs', 'Student_Enrolment']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
How many different addresses do the students currently live?","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the different addresses that have students living there?","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
List all the student details in reversed lexicographical order.","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What other details can you tell me about students in reverse alphabetical order?","{""tables"": ['Students']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Describe the section h.","{""tables"": ['Sections']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What is the description for the section named h?","{""tables"": ['Sections']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .","{""tables"": ['students', 'addresses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Addresses` (
address_id,
line_1,
line_2,
line_3,
city,
zip_postcode,
state_province_county,
country,
other_address_details);

CREATE TABLE `Courses` (
course_id,
course_name,
course_description,
other_details);

CREATE TABLE `Departments` (
department_id,
department_name,
department_description,
other_details);

CREATE TABLE `Degree_Programs` (
degree_program_id,
department_id,
degree_summary_name,
degree_summary_description,
other_details);

CREATE TABLE `Sections` (
section_id,
course_id,
section_name,
section_description,
other_details);

CREATE TABLE `Semesters` (
semester_id,
semester_name,
semester_description,
other_details);

CREATE TABLE `Students` (
student_id,
current_address_id,
permanent_address_id,
first_name,
middle_name,
last_name,
cell_mobile_number,
email_address,
ssn,
date_first_registered,
date_left,
other_student_details);

CREATE TABLE `Student_Enrolment` (
student_enrolment_id,
degree_program_id,
semester_id,
student_id,
other_details);

CREATE TABLE `Student_Enrolment_Courses` (
student_course_id,
course_id,
student_enrolment_id);

CREATE TABLE `Transcripts` (
transcript_id,
transcript_date,
other_details);

CREATE TABLE `Transcript_Contents` (
student_course_id,
transcript_id);

### 
Question: 
What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?","{""tables"": ['students', 'addresses']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
List the title of all cartoons in alphabetical order.","{""tables"": ['Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the titles of the cartoons sorted alphabetically?","{""tables"": ['Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
List all cartoon directed by ""Ben Jones"".","{""tables"": ['Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the names of all cartoons directed by Ben Jones?","{""tables"": ['Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
How many cartoons were written by ""Joseph Kuhr""?","{""tables"": ['Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the number of cartoones written by Joseph Kuhr?","{""tables"": ['Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
list all cartoon titles and their directors ordered by their air date","{""tables"": ['Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the name and directors of all the cartoons that are ordered by air date?","{""tables"": ['Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
List the title of all cartoon directed by ""Ben Jones"" or ""Brandon Vietti"".","{""tables"": ['Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?","{""tables"": ['Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
Which country has the most of TV Channels? List the country and number of TV Channels it has.","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the country with the most number of TV Channels and how many does it have?","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
List the number of different series names and contents in the TV Channel table.","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
How many different series and contents are listed in the TV Channel table?","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the content of TV Channel with serial name ""Sky Radio""?","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the content of the series Sky Radio?","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the Package Option of TV Channel with serial name ""Sky Radio""?","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the Package Options of the TV Channels whose series names are Sky Radio?","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
How many TV Channel using language English?","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
How many TV Channels use the English language?","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
List the language used least number of TV Channel. List language and number of TV Channel.","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the languages used by the least number of TV Channels and how many channels use it?","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
List each language and the number of TV Channels using it.","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
For each language, list the number of TV Channels that use it.","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the TV Channel that shows the cartoon ""The Rise of the Blue Beetle!""? List the TV Channel's series name.","{""tables"": ['TV_Channel', 'Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the series name of the TV Channel that shows the cartoon ""The Rise of the Blue Beetle""?","{""tables"": ['TV_Channel', 'Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
List the title of all  Cartoons showed on TV Channel with series name ""Sky Radio"".","{""tables"": ['TV_Channel', 'Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the title of all the cartools that are on the TV Channel with the series name ""Sky Radio""?","{""tables"": ['TV_Channel', 'Cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
List the Episode of all TV series sorted by rating.","{""tables"": ['TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are all of the episodes ordered by ratings?","{""tables"": ['TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
List top 3 highest Rating  TV series. List the TV series's Episode and Rating.","{""tables"": ['TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are 3 most highly rated episodes in the TV series table and what were those ratings?","{""tables"": ['TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is minimum and maximum share of TV series?","{""tables"": ['TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the maximum and minimum share for the TV series?","{""tables"": ['TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the air date of TV series with Episode ""A Love of a Lifetime""?","{""tables"": ['TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
When did the episode ""A Love of a Lifetime"" air?","{""tables"": ['TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is Weekly Rank of TV series with Episode ""A Love of a Lifetime""?","{""tables"": ['TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the weekly rank for the episode ""A Love of a Lifetime""?","{""tables"": ['TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the TV Channel of TV series with Episode ""A Love of a Lifetime""? List the TV Channel's series name.","{""tables"": ['TV_Channel', 'TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the name of the series that has the episode ""A Love of a Lifetime""?","{""tables"": ['TV_Channel', 'TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
List the Episode of all  TV series showed on TV Channel with series name ""Sky Radio"".","{""tables"": ['TV_Channel', 'TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the episode for the TV series named ""Sky Radio""?","{""tables"": ['TV_Channel', 'TV_series']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
Find the number of cartoons directed by each of the listed directors.","{""tables"": ['cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
How many cartoons did each director create?","{""tables"": ['cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
Find the production code and channel of the most recently aired cartoon .","{""tables"": ['cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the produdction code and channel of the most recent cartoon ?","{""tables"": ['cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
Find the package choice and series name of the TV channel that has high definition TV.","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the package options and the name of the series for the TV Channel that supports high definition TV?","{""tables"": ['TV_Channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
which countries' tv channels are playing some cartoon written by Todd Casey?","{""tables"": ['TV_Channel', 'cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the countries that have cartoons on TV that were written by Todd Casey?","{""tables"": ['TV_Channel', 'cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
which countries' tv channels are not playing any cartoon written by Todd Casey?","{""tables"": ['TV_Channel', 'cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the countries that are not playing cartoons written by Todd Casey?","{""tables"": ['TV_Channel', 'cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?","{""tables"": ['TV_Channel', 'cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?","{""tables"": ['TV_Channel', 'cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
find the pixel aspect ratio and nation of the tv channels that do not use English.","{""tables"": ['tv_channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What is the pixel aspect ratio and country of origin for all TV channels that do not use English?","{""tables"": ['tv_channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
find id of the tv channels that from the countries where have more than two tv channels.","{""tables"": ['tv_channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the ids of all tv channels that have more than 2 TV channels?","{""tables"": ['tv_channel']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
find the id of tv channels that do not play any cartoon directed by Ben Jones.","{""tables"": ['TV_Channel', 'cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?","{""tables"": ['TV_Channel', 'cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
find the package option of the tv channel that do not have any cartoon directed by Ben Jones.","{""tables"": ['TV_Channel', 'cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `TV_Channel` (
id,
series_name,
Country,
Language,
Content,
Pixel_aspect_ratio_PAR,
Hight_definition_TV,
Pay_per_view_PPV,
Package_Option);

CREATE TABLE `TV_series` (
id,
Episode,
Air_Date,
Rating,
Share,
18_49_Rating_Share,
Viewers_m,
Weekly_Rank,
Channel);

CREATE TABLE `Cartoon` (
id,
Title,
Directed_by,
Written_by,
Original_air_date,
Production_code,
Channel);

### 
Question: 
What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?","{""tables"": ['TV_Channel', 'cartoon']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
How many poker players are there?","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Count the number of poker players.","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
List the earnings of poker players in descending order.","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are the earnings of poker players, ordered descending by value?","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
List the final tables made and the best finishes of poker players.","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are the final tables made and best finishes for all poker players?","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What is the average earnings of poker players?","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Return the average earnings across all poker players.","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What is the money rank of the poker player with the highest earnings?","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Return the money rank of the player with the greatest earnings.","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What is the maximum number of final tables made among poker players with earnings less than 200000?","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Return the maximum final tables made across all poker players who have earnings below 200000.","{""tables"": ['poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are the names of poker players?","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Return the names of all the poker players.","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are the names of poker players whose earnings is higher than 300000?","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Give the names of poker players who have earnings above 300000.","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
List the names of poker players ordered by the final tables made in ascending order.","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are the names of poker players, ordered ascending by the number of final tables they have made?","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What is the birth date of the poker player with the lowest earnings?","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Return the birth date of the poker player with the lowest earnings.","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What is the money rank of the tallest poker player?","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Return the money rank of the poker player with the greatest height.","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What is the average earnings of poker players with height higher than 200?","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Give average earnings of poker players who are taller than 200.","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are the names of poker players in descending order of earnings?","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Return the names of poker players sorted by their earnings descending.","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are different nationalities of people and the corresponding number of people from each nation?","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
How many people are there of each nationality?","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What is the most common nationality of people?","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Give the nationality that is most common across all people.","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are the nationalities that are shared by at least two people?","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Return the nationalities for which there are two or more people.","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
List the names and birth dates of people in ascending alphabetical order of name.","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are the names and birth dates of people, ordered by their names in alphabetical order?","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Show names of people whose nationality is not ""Russia"".","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are the names of people who are not from Russia?","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
List the names of people that are not poker players.","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
What are the names of people who do not play poker?","{""tables"": ['people', 'poker_player']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
How many distinct nationalities are there?","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `poker_player` (
Poker_Player_ID,
People_ID,
Final_Table_Made,
Best_Finish,
Money_Rank,
Earnings);

CREATE TABLE `people` (
People_ID,
Nationality,
Name,
Birth_Date,
Height);

### 
Question: 
Count the number of different nationalities.","{""tables"": ['people']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
How many states are there?","{""tables"": ['area_code_state']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
List the contestant numbers and names, ordered by contestant name descending.","{""tables"": ['contestants']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
List the vote ids, phone numbers and states of all votes.","{""tables"": ['votes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
What are the maximum and minimum values of area codes?","{""tables"": ['area_code_state']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
What is last date created of votes from the state 'CA'?","{""tables"": ['votes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
What are the names of the contestants whose names are not 'Jessie Alloway'","{""tables"": ['contestants']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
What are the distinct states and create time of all votes?","{""tables"": ['votes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
What are the contestant numbers and names of the contestants who had at least two votes?","{""tables"": ['contestants', 'votes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?","{""tables"": ['contestants', 'votes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
What are the number of votes from state 'NY' or 'CA'?","{""tables"": ['votes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
How many contestants did not get voted?","{""tables"": ['contestants', 'votes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
What is the area code in which the most voters voted?","{""tables"": ['area_code_state', 'votes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?","{""tables"": ['contestants', 'votes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.","{""tables"": ['contestants', 'votes', 'area_code_state']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `AREA_CODE_STATE` (
area_code,
state);

CREATE TABLE `CONTESTANTS` (
contestant_number,
contestant_name);

CREATE TABLE `VOTES` (
vote_id,
phone_number,
state,
contestant_number,
created);

### 
Question: 
Return the names of the contestants whose names contain the substring 'Al' .","{""tables"": ['contestants']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the names of all the countries that became independent after 1950?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the names of the nations that were founded after 1950.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many countries have a republic as their form of government?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many countries have governments that are republics?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the total surface area of the countries in the Caribbean region?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How much surface area do the countires in the Carribean cover together?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which continent is Anguilla in?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the continent name which Anguilla belongs to?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which region is the city Kabul located in?","{""tables"": ['country', 'city']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What region is Kabul in?","{""tables"": ['country', 'city']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which language is the most popular in Aruba?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What language is predominantly spoken in Aruba?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the population and life expectancies in Brazil?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give me Brazil’s population and life expectancies.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the region and population of Angola?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What region does Angola belong to and what is its population?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the average expected life expectancy for countries in the region of Central Africa?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How long is the people’s average life expectancy in Central Africa?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the name of country that has the shortest life expectancy in Asia?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the name of the country in Asia with the lowest life expectancy.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the total population and maximum GNP in Asia?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many people live in Asia, and what is the largest GNP among them?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the average life expectancy in African countries that are republics?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the average life expectancy for countries in Africa which are republics?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the total surface area of the continents Asia and Europe?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the total surface area covered by countries in Asia or Europe.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many people live in Gelderland district?","{""tables"": ['city']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the total population of Gelderland district?","{""tables"": ['city']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the average GNP and total population in all nations whose government is US territory?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the mean GNP and total population of nations which are considered US territory.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many unique languages are spoken in the world?","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the number of distinct languages used around the world?","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many type of governments are in Africa?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many different forms of governments are there in Africa?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the total number of languages used in Aruba?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many languages are spoken in Aruba?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many official languages does Afghanistan have?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many official languages are spoken in Afghanistan?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is name of the country that speaks the largest number of languages?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the name of the nation that uses the greatest amount of languages.","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which continent has the most diverse languages?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which continent speaks the most languages?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many countries speak both English and Dutch?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the number of nations that use English and Dutch?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the names of nations speak both English and French?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the names of nations that speak both English and French.","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the names of nations where both English and French are official languages?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the names of countries with English and French as official languages.","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the number of distinct continents where Chinese is spoken?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many continents speak Chinese?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the regions that use English or Dutch?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which regions speak Dutch or English?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the countries where either English or Dutch is the official language ?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which countries have either English or Dutch as an official language?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which language is the most popular on the Asian continent?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the language that is used by the largest number of Asian nations?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which languages are spoken by only one country in republic governments?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What languages are only used by a single country with a republic government?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Find the city with the largest population that uses English.","{""tables"": ['city', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the most populace city that speaks English?","{""tables"": ['city', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Find the name, population and expected life length of asian country with the largest area?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the name, population, and life expectancy of the largest Asian country by land?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is average life expectancy in the countries where English is not the official language?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the mean life expectancy of countries in which English is not the official language.","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the total number of people living in the nations that do not use English?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many people live in countries that do not speak English?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the official language spoken in the country whose head of state is Beatrix?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the official language used in the country the name of whose head of state is Beatrix.","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the total number of unique official languages spoken in the countries that are founded before 1930?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
For the countries founded before 1930, what is the total number of distinct official languages?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the countries that have greater surface area than any country in Europe?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which countries have greater area than that of any country in Europe?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the African countries that have a  population less than any country in Asia?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which African countries have a smaller population than that of any country in Asia?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which Asian countries have a population that is larger than any country in Africa?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the Asian countries which have a population larger than that of any country in Africa?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the country codes for countries that do not speak English?","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Return the country codes for countries that do not speak English.","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the country codes of countries where people use languages other than English?","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the country codes for countries in which people speak langauges that are not English.","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the codes of the countries that do not speak English and whose government forms are not Republic?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Return the codes of countries that do not speak English and do not have Republics for governments.","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which cities are in European countries where English is not the official language?","{""tables"": ['country', 'city', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the names of cities in Europe for which English is not the official language?","{""tables"": ['country', 'city', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which unique cities are in Asian countries where Chinese is the official language ?","{""tables"": ['country', 'countrylanguage', 'city']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Return the different names of cities that are in Asia and for which Chinese is the official language.","{""tables"": ['country', 'countrylanguage', 'city']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the name, independence year, and surface area of the country with the smallest population?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the name, year of independence, and surface area of the country that has the lowest population.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the population, name and leader of the country with the largest area?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the name, population, and head of state for the country that has the largest area.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the names of countries that speak more than 2 languages, as well as how many languages they speak?","{""tables"": ['country', 'countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Find the number of cities in each district whose population is greater than the average population of cities?","{""tables"": ['city']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
How many cities in each district have a population that is above the average population across all cities?","{""tables"": ['city']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Find the government form name and total population for each government form whose average life expectancy is longer than 72.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the names and areas of countries with the top 5 largest area?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Return the names and surface areas of the 5 largest countries.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are names of countries with the top 3 largest population?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Return the names of the 3 most populated countries.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the names of the nations with the 3 lowest populations?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Return the names of the 3 countries with the fewest people.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
how many countries are in Asia?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Count the number of countries in Asia.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the names of the countries that are in the continent of Europe and have a population of 80000?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the names of countries that are in Europe and have a population equal to 80000.","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .","{""tables"": ['country']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the cities whose population is between 160000 and 900000?","{""tables"": ['city']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Return the names of cities that have a population between 160000 and 900000 .","{""tables"": ['city']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Which language is spoken by the largest number of countries?","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Give the language that is spoken in the most countries.","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the language spoken by the largest percentage of people in each country?","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What is the total number of countries where Spanish is spoken by the largest percentage of people?","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Count the number of countries for which Spanish is the predominantly spoken language.","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
What are the codes of countries where Spanish is spoken by the largest percentage of people?","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `city` (
ID,
Name,
CountryCode,
District,
Population);

CREATE TABLE `sqlite_sequence` (
name,
seq);

CREATE TABLE `country` (
Code,
Name,
Continent,
Region,
SurfaceArea,
IndepYear,
Population,
LifeExpectancy,
GNP,
GNPOld,
LocalName,
GovernmentForm,
HeadOfState,
Capital,
Code2);

CREATE TABLE `countrylanguage` (
CountryCode,
Language,
IsOfficial,
Percentage);

### 
Question: 
Return the codes of countries for which Spanish is the predominantly spoken language.","{""tables"": ['countrylanguage']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
How many conductors are there?","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Count the number of conductors.","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
List the names of conductors in ascending order of age.","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the names of conductors, ordered by age?","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the names of conductors whose nationalities are not ""USA""?","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Return the names of conductors that do not have the nationality ""USA"".","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the record companies of orchestras in descending order of years in which they were founded?","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Return the record companies of orchestras, sorted descending by the years in which they were founded.","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What is the average attendance of shows?","{""tables"": ['SHOW']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Return the average attendance across all shows.","{""tables"": ['SHOW']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the maximum and minimum share of performances whose type is not ""Live final"".","{""tables"": ['performance']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Return the maximum and minimum shares for performances that do not have the type ""Live final"".","{""tables"": ['performance']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
How many different nationalities do conductors have?","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Count the number of different nationalities of conductors.","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
List names of conductors in descending order of years of work.","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the names of conductors, sorted descending by the number of years they have worked?","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
List the name of the conductor with the most years of work.","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What is the name of the conductor who has worked the greatest number of years?","{""tables"": ['conductor']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Show the names of conductors and the orchestras they have conducted.","{""tables"": ['conductor', 'orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the names of conductors as well as the corresonding orchestras that they have conducted?","{""tables"": ['conductor', 'orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Show the names of conductors that have conducted more than one orchestras.","{""tables"": ['conductor', 'orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the names of conductors who have conducted at more than one orchestra?","{""tables"": ['conductor', 'orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Show the name of the conductor that has conducted the most number of orchestras.","{""tables"": ['conductor', 'orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What is the name of the conductor who has conducted the most orchestras?","{""tables"": ['conductor', 'orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Please show the name of the conductor that has conducted orchestras founded after 2008.","{""tables"": ['conductor', 'orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the names of conductors who have conducted orchestras founded after the year 2008?","{""tables"": ['conductor', 'orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Please show the different record companies and the corresponding number of orchestras.","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
How many orchestras does each record company manage?","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Please show the record formats of orchestras in ascending order of count.","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the major record formats of orchestras, sorted by their frequency?","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
List the record company shared by the most number of orchestras.","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What is the record company used by the greatest number of orchestras?","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
List the names of orchestras that have no performance.","{""tables"": ['orchestra', 'performance']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the orchestras that do not have any performances?","{""tables"": ['orchestra', 'performance']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Show the record companies shared by orchestras founded before 2003 and after 2003.","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Find the number of orchestras whose record format is ""CD"" or ""DVD"".","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Count the number of orchestras that have CD or DVD as their record format.","{""tables"": ['orchestra']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
Show the years in which orchestras that have given more than one performance are founded.","{""tables"": ['orchestra', 'performance']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `conductor` (
Conductor_ID,
Name,
Age,
Nationality,
Year_of_Work);

CREATE TABLE `orchestra` (
Orchestra_ID,
Orchestra,
Conductor_ID,
Record_Company,
Year_of_Founded,
Major_Record_Format);

CREATE TABLE `performance` (
Performance_ID,
Orchestra_ID,
Type,
Date,
Official_ratings_(millions),
Weekly_rank,
Share);

CREATE TABLE `show` (
Show_ID,
Performance_ID,
If_first_show,
Result,
Attendance);

### 
Question: 
What are years of founding for orchestras that have had more than a single performance?","{""tables"": ['orchestra', 'performance']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
How many high schoolers are there?","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Count the number of high schoolers.","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the names and grades of each high schooler.","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the names and grades for each high schooler?","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show all the grades of the high schoolers.","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What is the grade of each high schooler?","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What grade is Kyle in?","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Return the grade for the high schooler named Kyle.","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the names of all high schoolers in grade 10.","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the names of all high schoolers in grade 10?","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the ID of the high schooler named Kyle.","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What is Kyle's id?","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
How many high schoolers are there in grade 9 or 10?","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Count the number of high schoolers in grades 9 or 10.","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the number of high schoolers for each grade.","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
How many high schoolers are in each grade?","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Which grade has the most high schoolers?","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Return the grade that has the greatest number of high schoolers.","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show me all grades that have at least 4 students.","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Which grades have 4 or more high schoolers?","{""tables"": ['Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the student IDs and numbers of friends corresponding to each.","{""tables"": ['Friend']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
How many friends does each student have?","{""tables"": ['Friend']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the names of high school students and their corresponding number of friends.","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the names of the high schoolers and how many friends does each have?","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What is the name of the high schooler who has the greatest number of friends?","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Return the name of the high school student with the most friends.","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the names of high schoolers who have at least 3 friends.","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the names of high schoolers who have 3 or more friends?","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the names of all of the high schooler Kyle's friends.","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Return the names of friends of the high school student Kyle.","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
How many friends does the high school student Kyle have?","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Count the number of friends Kyle has.","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show ids of all students who do not have any friends.","{""tables"": ['Highschooler', 'Friend']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the ids of high school students who do not have friends?","{""tables"": ['Highschooler', 'Friend']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show names of all high school students who do not have any friends.","{""tables"": ['Highschooler', 'Friend']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the names of students who have no friends?","{""tables"": ['Highschooler', 'Friend']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the ids of high schoolers who have friends and are also liked by someone else.","{""tables"": ['Friend', 'Likes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the ids of students who both have friends and are liked?","{""tables"": ['Friend', 'Likes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show name of all students who have some friends and also are liked by someone else.","{""tables"": ['Friend', 'Highschooler', 'Likes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the names of high schoolers who both have friends and are liked?","{""tables"": ['Friend', 'Highschooler', 'Likes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Count the number of likes for each student id.","{""tables"": ['Likes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
How many likes correspond to each student id?","{""tables"": ['Likes']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the names of high schoolers who have likes, and numbers of likes for each.","{""tables"": ['Likes', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the names of high schoolers who have likes, and how many likes does each have?","{""tables"": ['Likes', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What is the name of the high schooler who has the greatest number of likes?","{""tables"": ['Likes', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Give the name of the student with the most likes.","{""tables"": ['Likes', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the names of students who have at least 2 likes.","{""tables"": ['Likes', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the names of students who have 2 or more likes?","{""tables"": ['Likes', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Show the names of students who have a grade higher than 5 and have at least 2 friends.","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?","{""tables"": ['Friend', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
How many likes does Kyle have?","{""tables"": ['Likes', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Return the number of likes that the high schooler named Kyle has.","{""tables"": ['Likes', 'Highschooler']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Find the average grade of all students who have some friends.","{""tables"": ['Highschooler', 'Friend']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What is the average grade of students who have friends?","{""tables"": ['Highschooler', 'Friend']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
Find the minimum grade of students who have no friends.","{""tables"": ['Highschooler', 'Friend']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Highschooler` (
ID,
name,
grade);

CREATE TABLE `Friend` (
student_id,
friend_id);

CREATE TABLE `Likes` (
student_id,
liked_id);

### 
Question: 
What is the lowest grade of students who do not have any friends?","{""tables"": ['Highschooler', 'Friend']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which states have both owners and professionals living there?","{""tables"": ['Owners', 'Professionals']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the states where both owners and professionals live.","{""tables"": ['Owners', 'Professionals']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What is the average age of the dogs who have gone through any treatments?","{""tables"": ['Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the average age of the dogs who went through treatments.","{""tables"": ['Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .","{""tables"": ['dogs', 'treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?","{""tables"": ['dogs', 'treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which first names are used for professionals or owners but are not used as dog names?","{""tables"": ['Professionals', 'Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the first names that are used for professionals or owners but are not used as dog names.","{""tables"": ['Professionals', 'Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which professional did not operate any treatment on dogs? List the professional's id, role and email.","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Give me the id, role and email of the professionals who did not perform any treatment on dogs.","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which owner owns the most dogs? List the owner id, first name and last name.","{""tables"": ['Dogs', 'Owners']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Return the owner id, first name and last name of the owner who has the most dogs.","{""tables"": ['Dogs', 'Owners']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which professionals have done at least two treatments? List the professional's id, role, and first name.","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are the id, role, and first name of the professionals who have performed two or more treatments?","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What is the name of the breed with the most dogs?","{""tables"": ['Breeds', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which breed do the most dogs have? Give me the breed name.","{""tables"": ['Breeds', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.","{""tables"": ['Owners', 'Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.","{""tables"": ['Owners', 'Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What is the description of the treatment type that costs the least money in total?","{""tables"": ['Treatment_types', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Give me the description of the treatment type whose total cost is the lowest.","{""tables"": ['Treatment_types', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.","{""tables"": ['Owners', 'Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.","{""tables"": ['Owners', 'Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which professionals have done at least two types of treatments? List the professional id and cell phone.","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the id and cell phone of the professionals who operate two or more types of treatments.","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are the first name and last name of the professionals who have done treatment with cost below average?","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List the date of each treatment, together with the first name of the professional who operated it.","{""tables"": ['Treatments', 'Professionals']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are the date and the operating professional's first name of each treatment?","{""tables"": ['Treatments', 'Professionals']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List the cost of each treatment and the corresponding treatment type description.","{""tables"": ['Treatments', 'treatment_types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are the cost and treatment type description of each treatment?","{""tables"": ['Treatments', 'treatment_types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List each owner's first name, last name, and the size of his for her dog.","{""tables"": ['Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are each owner's first name, last name, and the size of their dog?","{""tables"": ['Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List pairs of the owner's first name and the dogs's name.","{""tables"": ['Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are each owner's first name and their dogs's name?","{""tables"": ['Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List the names of the dogs of the rarest breed and the treatment dates of them.","{""tables"": ['Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which dogs are of the rarest breed? Show their names and treatment dates.","{""tables"": ['Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.","{""tables"": ['Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the first names of owners living in Virginia and the names of dogs they own.","{""tables"": ['Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are the arriving date and the departing date of the dogs who have gone through a treatment?","{""tables"": ['Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the arriving date and the departing date of the dogs that received a treatment.","{""tables"": ['Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List the last name of the owner owning the youngest dog.","{""tables"": ['Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Who owns the youngest dog? Give me his or her last name.","{""tables"": ['Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.","{""tables"": ['Professionals']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?","{""tables"": ['Professionals']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are the arriving date and the departing date of all the dogs?","{""tables"": ['Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List the arrival date and the departure date for all the dogs.","{""tables"": ['Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
How many dogs went through any treatments?","{""tables"": ['Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Count the number of dogs that went through a treatment.","{""tables"": ['Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
How many professionals have performed any treatment to dogs?","{""tables"": ['Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the number of professionals who have ever treated dogs.","{""tables"": ['Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.","{""tables"": ['professionals']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.","{""tables"": ['professionals']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.","{""tables"": ['Owners']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.","{""tables"": ['Owners']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
How many dogs have an age below the average?","{""tables"": ['Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Count the number of dogs of an age below the average.","{""tables"": ['Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
How much does the most recent treatment cost?","{""tables"": ['Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Show me the cost of the most recently performed treatment.","{""tables"": ['Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
How many dogs have not gone through any treatment?","{""tables"": ['Dogs', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Tell me the number of dogs that have not received any treatment .","{""tables"": ['dogs', 'treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
How many owners temporarily do not have any dogs?","{""tables"": ['Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the number of owners who do not own any dogs at this moment.","{""tables"": ['Owners', 'Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
How many professionals did not operate any treatment on dogs?","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the number of professionals who have not treated any dogs.","{""tables"": ['Professionals', 'Treatments']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.","{""tables"": ['Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.","{""tables"": ['Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What is the average age of all the dogs?","{""tables"": ['Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Compute the average age of all the dogs.","{""tables"": ['Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What is the age of the oldest dog?","{""tables"": ['Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Tell me the age of the oldest dog.","{""tables"": ['Dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
How much does each charge type costs? List both charge type and amount.","{""tables"": ['Charges']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List each charge type and its amount.","{""tables"": ['Charges']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
How much does the most expensive charge type costs?","{""tables"": ['Charges']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What is the charge amount of the most expensive charge type?","{""tables"": ['Charges']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List the email, cell phone and home phone of all the professionals.","{""tables"": ['professionals']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are the email, cell phone and home phone of each professional?","{""tables"": ['professionals']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are all the possible breed type and size type combinations?","{""tables"": ['dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
Find the distinct breed type and size type combinations for dogs.","{""tables"": ['dogs']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
List the first name of all the professionals along with the description of the treatment they have done.","{""tables"": ['professionals', 'Treatments', 'Treatment_types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Breeds` (
breed_code,
breed_name);

CREATE TABLE `Charges` (
charge_id,
charge_type,
charge_amount);

CREATE TABLE `Sizes` (
size_code,
size_description);

CREATE TABLE `Treatment_Types` (
treatment_type_code,
treatment_type_description);

CREATE TABLE `Owners` (
owner_id,
first_name,
last_name,
street,
city,
state,
zip_code,
email_address,
home_phone,
cell_number);

CREATE TABLE `Dogs` (
dog_id,
owner_id,
abandoned_yn,
breed_code,
size_code,
name,
age,
date_of_birth,
gender,
weight,
date_arrived,
date_adopted,
date_departed);

CREATE TABLE `Professionals` (
professional_id,
role_code,
first_name,
street,
city,
state,
zip_code,
last_name,
email_address,
home_phone,
cell_number);

CREATE TABLE `Treatments` (
treatment_id,
dog_id,
professional_id,
treatment_type_code,
date_of_treatment,
cost_of_treatment);

### 
Question: 
What are each professional's first name and description of the treatment they have performed?","{""tables"": ['professionals', 'Treatments', 'Treatment_types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
How many singers are there?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What is the count of singers?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
List the name of singers in ascending order of net worth.","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What are the names of singers ordered by ascending net worth?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What are the birth year and citizenship of singers?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What are the birth years and citizenships of the singers?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
List the name of singers whose citizenship is not ""France"".","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What are the names of the singers who are not French citizens?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
Show the name of singers whose birth year is either 1948 or 1949?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What are the names of the singers whose birth years are either 1948 or 1949?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What is the name of the singer with the largest net worth?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What is the name of the singer who is worth the most?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
Show different citizenship of singers and the number of singers of each citizenship.","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
For each citizenship, how many singers are from that country?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
Please show the most common citizenship of singers.","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What is the most common singer citizenship ?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
Show different citizenships and the maximum net worth of singers of each citizenship.","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
For each citizenship, what is the maximum net worth?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
Show titles of songs and names of singers.","{""tables"": ['singer', 'song']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What are the song titles and singer names?","{""tables"": ['singer', 'song']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
Show distinct names of singers that have songs with sales more than 300000.","{""tables"": ['singer', 'song']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
what are the different names of the singers that have sales more than 300000?","{""tables"": ['singer', 'song']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
Show the names of singers that have more than one song.","{""tables"": ['singer', 'song']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What are the names of the singers that have more than one songs?","{""tables"": ['singer', 'song']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
Show the names of singers and the total sales of their songs.","{""tables"": ['singer', 'song']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
For each singer name, what is the total sales for their songs?","{""tables"": ['singer', 'song']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
List the name of singers that do not have any song.","{""tables"": ['singer', 'song']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What is the sname of every sing that does not have any song?","{""tables"": ['singer', 'song']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
Show the citizenship shared by singers with birth year before 1945 and after 1955.","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `singer` (
Singer_ID,
Name,
Birth_Year,
Net_Worth_Millions,
Citizenship);

CREATE TABLE `song` (
Song_ID,
Title,
Singer_ID,
Sales,
Highest_Position);

### 
Question: 
What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?","{""tables"": ['singer']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Feature_Types` (
feature_type_code,
feature_type_name);

CREATE TABLE `Ref_Property_Types` (
property_type_code,
property_type_description);

CREATE TABLE `Other_Available_Features` (
feature_id,
feature_type_code,
feature_name,
feature_description);

CREATE TABLE `Properties` (
property_id,
property_type_code,
date_on_market,
date_sold,
property_name,
property_address,
room_count,
vendor_requested_price,
buyer_offered_price,
agreed_selling_price,
apt_feature_1,
apt_feature_2,
apt_feature_3,
fld_feature_1,
fld_feature_2,
fld_feature_3,
hse_feature_1,
hse_feature_2,
hse_feature_3,
oth_feature_1,
oth_feature_2,
oth_feature_3,
shp_feature_1,
shp_feature_2,
shp_feature_3,
other_property_details);

CREATE TABLE `Other_Property_Features` (
property_id,
feature_id,
property_feature_description);

### 
Question: 
How many available features are there in total?","{""tables"": ['Other_Available_Features']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Feature_Types` (
feature_type_code,
feature_type_name);

CREATE TABLE `Ref_Property_Types` (
property_type_code,
property_type_description);

CREATE TABLE `Other_Available_Features` (
feature_id,
feature_type_code,
feature_name,
feature_description);

CREATE TABLE `Properties` (
property_id,
property_type_code,
date_on_market,
date_sold,
property_name,
property_address,
room_count,
vendor_requested_price,
buyer_offered_price,
agreed_selling_price,
apt_feature_1,
apt_feature_2,
apt_feature_3,
fld_feature_1,
fld_feature_2,
fld_feature_3,
hse_feature_1,
hse_feature_2,
hse_feature_3,
oth_feature_1,
oth_feature_2,
oth_feature_3,
shp_feature_1,
shp_feature_2,
shp_feature_3,
other_property_details);

CREATE TABLE `Other_Property_Features` (
property_id,
feature_id,
property_feature_description);

### 
Question: 
What is the feature type name of feature AirCon?","{""tables"": ['Other_Available_Features', 'Ref_Feature_Types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Feature_Types` (
feature_type_code,
feature_type_name);

CREATE TABLE `Ref_Property_Types` (
property_type_code,
property_type_description);

CREATE TABLE `Other_Available_Features` (
feature_id,
feature_type_code,
feature_name,
feature_description);

CREATE TABLE `Properties` (
property_id,
property_type_code,
date_on_market,
date_sold,
property_name,
property_address,
room_count,
vendor_requested_price,
buyer_offered_price,
agreed_selling_price,
apt_feature_1,
apt_feature_2,
apt_feature_3,
fld_feature_1,
fld_feature_2,
fld_feature_3,
hse_feature_1,
hse_feature_2,
hse_feature_3,
oth_feature_1,
oth_feature_2,
oth_feature_3,
shp_feature_1,
shp_feature_2,
shp_feature_3,
other_property_details);

CREATE TABLE `Other_Property_Features` (
property_id,
feature_id,
property_feature_description);

### 
Question: 
Show the property type descriptions of properties belonging to that code.","{""tables"": ['Properties', 'Ref_Property_Types']}"
"Given the following SQL tables, your job is to determine the tables that the question is referring to. Please format the answer in {""tables"": [entities]}

CREATE TABLE `Ref_Feature_Types` (
feature_type_code,
feature_type_name);

CREATE TABLE `Ref_Property_Types` (
property_type_code,
property_type_description);

CREATE TABLE `Other_Available_Features` (
feature_id,
feature_type_code,
feature_name,
feature_description);

CREATE TABLE `Properties` (
property_id,
property_type_code,
date_on_market,
date_sold,
property_name,
property_address,
room_count,
vendor_requested_price,
buyer_offered_price,
agreed_selling_price,
apt_feature_1,
apt_feature_2,
apt_feature_3,
fld_feature_1,
fld_feature_2,
fld_feature_3,
hse_feature_1,
hse_feature_2,
hse_feature_3,
oth_feature_1,
oth_feature_2,
oth_feature_3,
shp_feature_1,
shp_feature_2,
shp_feature_3,
other_property_details);

CREATE TABLE `Other_Property_Features` (
property_id,
feature_id,
property_feature_description);

### 
Question: 
What are the names of properties that are either houses or apartments with more than 1 room?","{""tables"": ['Properties']}"
